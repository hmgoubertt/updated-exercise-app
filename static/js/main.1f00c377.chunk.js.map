{"version":3,"sources":["components/RepetitionExercise/index.js","components/DurationExercise/index.js","components/FlexibilityExercise.js","App.js","reportWebVitals.js","index.js"],"names":["RepetitionExercise","_ref","name","count","setCount","useState","React","createElement","onClick","DurationExercise","time","setTime","running","setRunning","useEffect","timer","setInterval","t","clearInterval","FlexibilityExercise","App","selectedExercise","setSelectedExercise","type","map","exercise","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iMAceA,MAZf,SAA2BC,GAAY,IAAX,KAAEC,GAAMD,EAClC,MAAOE,EAAOC,GAAYC,mBAAS,GAEnC,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKL,GACLI,IAAAC,cAAA,SAAG,SAAOJ,GACVG,IAAAC,cAAA,UAAQC,QAASA,IAAMJ,EAASD,EAAQ,IAAI,mBCgBnCM,MAvBf,SAAyBR,GAAY,IAAX,KAAEC,GAAMD,EAChC,MAAOS,EAAMC,GAAWN,mBAAS,IAC1BO,EAASC,GAAcR,oBAAS,GAUvC,OARAC,IAAMQ,UAAU,KACd,IAAIC,EAIJ,OAHIH,IACFG,EAAQC,YAAY,IAAML,EAASM,GAAMA,EAAI,GAAI,MAE5C,IAAMC,cAAcH,IAC1B,CAACH,IAGFN,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKL,GACLI,IAAAC,cAAA,SAAG,SAAOG,EAAK,YACfJ,IAAAC,cAAA,UAAQC,QAASA,IAAMK,GAAYD,IAChCA,EAAU,OAAS,QAAQ,YCbrBO,MAJf,SAA4BlB,GAAY,IAAX,KAAEC,GAAMD,EACnC,OAAOK,IAAAC,cAAA,WAAK,iCAA+BL,ICwC9BkB,MAtCf,WACE,MAAOC,EAAkBC,GAAuBjB,mBAAS,MAWzD,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,UAAI,uBAZU,CAChB,CAAEL,KAAM,WAAYqB,KAAM,cAC1B,CAAErB,KAAM,YAAaqB,KAAM,YAC3B,CAAErB,KAAM,gBAAiBqB,KAAM,cAC/B,CAAErB,KAAM,UAAWqB,KAAM,YACzB,CAAErB,KAAM,UAAWqB,KAAM,cACzB,CAAErB,KAAM,eAAgBqB,KAAM,gBAOjBC,IAAKC,GACdnB,IAAAC,cAAA,UAAQmB,IAAKD,EAASvB,KAAMM,QAASA,IAAMc,EAAoBG,IAC5DA,EAASvB,OAIbmB,GACCf,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKc,EAAiBnB,MACK,eAA1BmB,EAAiBE,KAChBjB,IAAAC,cAACP,EAAkB,CAACE,KAAMmB,EAAiBnB,OACf,aAA1BmB,EAAiBE,KACnBjB,IAAAC,cAACE,EAAgB,CAACP,KAAMmB,EAAiBnB,OAEzCI,IAAAC,cAACY,EAAmB,CAACjB,KAAMmB,EAAiBnB,UCvBzCyB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK7B,IAAkD,IAAjD,OAAE8B,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASlC,EACpE8B,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlC,IAAAC,cAACD,IAAMmC,WAAU,KACfnC,IAAAC,cAACa,EAAG,QAORO,K","file":"static/js/main.1f00c377.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction RepetitionExercise({ name }) {\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <h3>{name}</h3>\r\n      <p>Reps: {count}</p>\r\n      <button onClick={() => setCount(count + 1)}>Increase Reps</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RepetitionExercise;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction DurationExercise({ name }) {\r\n  const [time, setTime] = useState(0);\r\n  const [running, setRunning] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    let timer;\r\n    if (running) {\r\n      timer = setInterval(() => setTime((t) => t + 1), 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [running]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>{name}</h3>\r\n      <p>Time: {time} seconds</p>\r\n      <button onClick={() => setRunning(!running)}>\r\n        {running ? \"Stop\" : \"Start\"} Timer\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DurationExercise;\r\n","import React from \"react\";\r\n\r\nfunction FlexibilityExercise({ name }) {\r\n  return <div>Perform flexibility exercise: {name}</div>;\r\n}\r\n\r\nexport default FlexibilityExercise;\r\n","import React, { useState } from \"react\";\r\nimport RepetitionExercise from \"./components/RepetitionExercise\";\r\nimport DurationExercise from \"./components/DurationExercise\";\r\nimport FlexibilityExercise from \"./components/FlexibilityExercise\";\r\n\r\nfunction App() {\r\n  const [selectedExercise, setSelectedExercise] = useState(null);\r\n\r\n  const exercises = [\r\n    { name: \"Push Ups\", type: \"repetition\" },\r\n    { name: \"Bicycling\", type: \"duration\" },\r\n    { name: \"Jumping Jacks\", type: \"repetition\" },\r\n    { name: \"Running\", type: \"duration\" },\r\n    { name: \"Sit Ups\", type: \"repetition\" },\r\n    { name: \"Yoga Stretch\", type: \"flexibility\" }, // Added flexibility exercise\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h1>Go Do Something!</h1>\r\n      <h3>Select an exercise:</h3>\r\n      {exercises.map((exercise) => (\r\n        <button key={exercise.name} onClick={() => setSelectedExercise(exercise)}>\r\n          {exercise.name}\r\n        </button>\r\n      ))}\r\n\r\n      {selectedExercise && (\r\n        <div>\r\n          <h2>{selectedExercise.name}</h2>\r\n          {selectedExercise.type === \"repetition\" ? (\r\n            <RepetitionExercise name={selectedExercise.name} />\r\n          ) : selectedExercise.type === \"duration\" ? (\r\n            <DurationExercise name={selectedExercise.name} />\r\n          ) : (\r\n            <FlexibilityExercise name={selectedExercise.name} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}